{
  "run-command.commands": [
    {
      "command": "get-childitem -Recurse -Force -Filter 'TestResults' | Remove-Item -Recurse -Force;$out = (join-path $env:Temp 'Coverage'); dotnet test --collect:\"XPlat Code Coverage\" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=cobertura;reportgenerator -filefilters:-*.g.cs -reports:**/TestResults/**/*.xml -targetdir:$out; if ($LASTEXITCODE -eq 0) { invoke-item \"$out\\index.html\" }",
      "name": "Cover Tests",
      "path": "${workspaceFolder}"
    }
  ],
  "yaml.schemas": {
    "https://squidfunk.github.io/mkdocs-material/schema.json": "mkdocs.yml"
  },
  "my.snippets": {
    "csharp": {
      "Generate fiddle": {
        "prefix": "fid",
        "body": [
          "using System;",
          "using System.Collections.Generic;",
          "using LSL.VariableReplacer;",
          "using System.Text.RegularExpressions;",
          "",
          "public class Program",
          "{",
          "\tpublic static void Main()",
          "\t{",
          "\t\t$TM_SELECTED_TEXT",
          "\t\tConsole.WriteLine(result);",
          "\t}",
          "}"
        ]
      }
    }
},
"svg.preview.background": "transparent"
}
